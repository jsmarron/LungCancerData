disp(['Running LungCancerViz.m']) ;
%  Does visualization of 
%  Early TCGA Data with RNAseq read depth curves for 4 genes. 
%  Data from Matt Wilkerson, Oct. 2011. 
%
%  Inputs in directory OriginalData:
%  counts.csv:  Main file of read counts. Top row is case ID, 1st column is chromosome location, remaining columns are read counts
%  exonsMarron.csv:  Edited version, to fix errors in original file exons.csv  (by deleting the lines with the 1st column = 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 54.  Look at P10, Case Number 38)
%
%  This script is a modification of Lung Cancer 2011 
%          (posted on STOR 881 webpage 2017 & 2019),
%      which mostly improves it by considering all 4 genes
%

ipart = 1 ;
              %    1 - Raw Data Curves, original scale
              %    2 - Raw Data Curves, log10 scale
              %    3 - PCA scatterplot
              %    4 - PCA scatterplot, brushed
              %    5 - Raw Data Curves, log10 scale, brushed


datfilename = '../DerivedData/LungCancer2011' ;


%  Load data from .mat file
%  generated by LungCancerSaveData.m
%
load(datfilename) ;
    %  Loads variables:
    %      DataS
    %      CaseNamesS
    %      vchrom
    %      GeneNamesS


%  Set basics
%
ig = 2 ;    %  for Chromosome 9 = CDK2NA
n = length(CaseNamesS) ;


mdat = DataS{ig,2} ;
    %  raw data, for gene CDKN2A

mdatl = log10(mdat + 1) ;


%  Set up brushing colors
%
%  Based on initial PCA
%
paramstruct = struct('npc',4,...
                     'iscreenwrite',1,...
                     'viout',[0 0 0 0 1]) ;
outstruct = pcaSM(mdatl,paramstruct) ;
mpc = getfield(outstruct,'mpc') ;

%  Set up Brushed Color Matrix
%
mcolor = ones(n,1) * [0 0 0] ;
    %  Start with all black and update
if ig == 1 ;
  vflag = (mpc(2,:) < -10)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
  vflag = (mpc(2,:) > 11)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
elseif ig == 2 ;
  vflag = (mpc(1,:) > 0)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
  vflag = (mpc(2,:) > 4)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
elseif ig == 3 ;
  vflag = (mpc(1,:) > 70)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
  vflag = (mpc(3,:) < -11)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
elseif ig == 4 ;
  vflag = (mpc(2,:) > 4)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
  vflag = (mpc(1,:) > 60)' ; 
  mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
end ;


if ipart == 1 ;    %  Raw Data Curves, original scale


  figure(1) ;
  clf ;


  nbp = size(mdat,1) ;
  vibp = (1:nbp)' ;
  vaxh = axisSM(vibp) ;
  vaxv = axisSM(mdat) ;
  vaxv(1) = 0 ;

  plot(mdat,'-') ;
  title('Gene = CDKN2A') ;
  xlabel('exonic nt number, not genomic position') ;
  ylabel('RNA read depth') ;
  axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

  orient landscape ;
  savestr = ['../GraphicalOutputs/LungCancer2011ip' num2str(ipart) 'RawDatOverlay'] ;
  print('-dpsc2',savestr) ;


elseif ipart == 2 ;    %  Raw Data Curves, log10 scale

  nbp = size(mdatl,1) ;
  vibp = (1:nbp)' ;
  vaxh = axisSM(vibp) ;
  vaxv = axisSM(mdatl) ;
  vaxv(1) = 0 ;
  plot(mdatl,'-') ;
  title('Gene = CDKN2A') ;
  xlabel('exonic nt number, not genomic position') ;
  ylabel('log_{10}(RNA read depth + 1)') ;
  axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

  orient landscape ;
  savestr = ['../GraphicalOutputs/LungCancer2011ip' num2str(ipart) 'Log10DatOverlay'] ;
  print('-dpsc2',savestr) ;


elseif ipart == 3 ;    %  PCA scatterplot

  nbp = size(mdatl,1) ;
  titlecellstr = {{'Lung Cancer - Next Gen' ...
                   ['Gene = ' GeneNamesS{ig}] ...
                   ['n = ' num2str(n) 'patients'] ... 
                   ['d = ' num2str(nbp) ' base pairs']}} ;
  savestr = ['../GraphicalOutputs/LungCancer2011ip' num2str(ipart) 'PCAScatPlot'] ;
  paramstruct = struct('npcadiradd',4, ...
                       'titlecellstr',titlecellstr, ...
                       'labelcellstr',{{'PC 1'; 'PC 2'; 'PC 3'; 'PC 4'}}, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  scatplotSM(mdatl,[],paramstruct) ;


elseif ipart == 4 ;    %  PCA scatterplot, brushed

  nbp = size(mdatl,1) ;
  titlecellstr = {{'Lung Cancer - Next Gen' ...
                   ['Gene = ' GeneNamesS{ig}] ...
                   ['n = ' num2str(n) 'patients'] ... 
                   ['d = ' num2str(nbp) ' base pairs']}} ;
  savestr = ['../GraphicalOutputs/LungCancer2011ip' num2str(ipart) 'PCAScatPlotBrushed'] ;
  paramstruct = struct('npcadiradd',4, ...
                       'icolor',mcolor, ...
                       'titlecellstr',titlecellstr, ...
                       'labelcellstr',{{'PC 1'; 'PC 2'; 'PC 3'; 'PC 4'}}, ...
                       'savestr',savestr, ...
                       'iscreenwrite',1) ;
  scatplotSM(mdatl,[],paramstruct) ;


elseif ipart == 5 ;    %  Raw Data Curves, log10 scale, brushed

  %  Make data overlay - log10 Data
  %
  nbp = size(mdatl,1) ;
  vibp = (1:nbp)' ;
  vaxh = axisSM(vibp) ;
  vaxv = axisSM(mdatl) ;
  vaxv(1) = 0 ;

  hold on ;
  for i = 1:n ;
    if sum(mcolor(i,:)) > 0.5 ;
      plot(mdatl(:,i),'-','Color',mcolor(i,:)) ;
    else ;
      plot(mdatl(:,i),'k-') ;
    end ;
  end ;
  hold off ;
  title('Gene = CDKN2A') ;
  xlabel('exonic nt number, not genomic position') ;
  ylabel('log_{10}(RNA read depth + 1)') ;
  axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

  orient landscape ;
  savestr = ['../GraphicalOutputs/LungCancer2011ip' num2str(ipart) 'Log10DatOverlayBrushed'] ;
  print('-dpsc2',savestr) ;


end ;    %  of ipart if-block






