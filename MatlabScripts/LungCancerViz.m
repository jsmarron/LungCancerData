disp(['Running LungCancerViz.m']) ;
%  Does visualization of 
%  Early TCGA Data with RNAseq read depth curves for 4 genes. 
%  Data from Matt Wilkerson, Oct. 2011. 
%
%  Data have been organized, cleaned, and saved in convenient formats by
%      LungCancerSaveData.m
%
%  This script is a modification of LungCancer2011 
%          (posted on STOR 881 webpage 2017 & 2019),
%      which it mostly improves by considering all 4 genes
%

ipart = 6 ;
              %    1 - Raw Data Curves, original scale
              %    2 - Raw Data Curves, log10 scale
              %    3 - PCA scatterplot
              %    4 - PCA scatterplot, brushed  (only for igene = 2)
              %    5 - Raw Data Curves, log10 scale, brushed
              %                                  (only for igene = 2)
              %    6 - FDA analysis, CurvdatSM, brushed colors

igene = 0 ;
              %    0 - loop through all
              %    1 - PIK3CA
              %    2 - CDKN2A
              %    3 - P10
              %    4 - STK11


datfilename = '../DerivedData/LungCancer2011' ;
outdirstr = '../GraphicalOutputs/' ;

%  Load data from .mat file
%  generated by LungCancerSaveData.m
%
load(datfilename) ;
    %  Loads variables:
    %      DataS  (4 x 2 Cell Array, 
    %                  1st column is vectors of genomic coordinates,
    %                  2nd is matrices of read counts   
    %      CaseNamesS  (1 x 180 Character Array)
    %      vchrom
    %      GeneNamesS


%  Set basics
%
n = length(CaseNamesS)
    %  Write to screen to verify


if igene == 0 ;    %  Loop through all
  geneset = 1:4 ;
else ;
  geneset = igene ;
end ;

for ig = geneset ;

  genestr = GeneNamesS{ig} ;
  disp(' ') ;
  disp(['Working on Gene ' genestr]) ;
  disp(' ') ;

  mdat = DataS{ig,2} ;
      %  matrix of counts data, for this gene

  mdatl = log10(mdat + 1) ;


  %  Set up brushing colors
  %
  %  Based on initial PCA
  %
  paramstruct = struct('npc',4,...
                       'iscreenwrite',1,...
                       'viout',[0 0 0 0 1]) ;
  outstruct = pcaSM(mdatl,paramstruct) ;
  mpc = getfield(outstruct,'mpc') ;

  %  Set up Brushed Color Matrix
  %
  mcolor = ones(n,1) * [0 0 0] ;
      %  Start with all black and update
  if ig == 1 ;   %  PIK3CA
    vflag = (mpc(2,:) < -10)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
    vflag = (mpc(2,:) > 11)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
  elseif ig == 2 ;    %  CDKN2A
    vflag = (mpc(1,:) > 0)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
    vflag = (mpc(2,:) > 4)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
  elseif ig == 3 ;    %  P10
    vflag = (mpc(1,:) > 70)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
    vflag = (mpc(4,:) < -2)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
  elseif ig == 4 ;    %  STK11
    vflag = (mpc(2,:) > 9)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [0 0 1] ;
    vflag = (mpc(1,:) > 40)' ; 
    mcolor(vflag,:) = ones(sum(vflag),1) * [1 0 0] ;
  end ;


  if ipart == 1 ;    %  Raw Data Curves, original scale

    figure(1) ;
    clf ;

    nbp = size(mdat,1) ;
    vibp = (1:nbp)' ;
    vaxh = axisSM(vibp) ;
    vaxv = axisSM(mdat) ;
    vaxv(1) = 0 ;

    plot(mdat,'-') ;
    title(['Gene = ' genestr]) ;
    xlabel('exonic nt number, not genomic position') ;
    ylabel('RNA read depth') ;
    axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

    orient landscape ;
    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                        genestr 'RawDatOverlay'] ;
    print('-dpsc2',savestr) ;


  elseif ipart == 2 ;    %  Raw Data Curves, log10 scale

    figure(1) ;
    clf ;

    nbp = size(mdatl,1) ;
    vibp = (1:nbp)' ;
    vaxh = axisSM(vibp) ;
    vaxv = axisSM(mdatl) ;
    vaxv(1) = 0 ;
    plot(mdatl,'-') ;
    title(['Gene = ' genestr]) ;
    xlabel('exonic nt number, not genomic position') ;
    ylabel('log_{10}(RNA read depth + 1)') ;
    axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

    orient landscape ;
    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                        genestr 'Log10DatOverlay'] ;
    print('-dpsc2',savestr) ;


  elseif ipart == 3 ;    %  PCA scatterplot

    figure(1) ;
    clf ;

    nbp = size(mdatl,1) ;
    titlecellstr = {{'Lung Cancer - Next Gen' ...
                     ['Gene = ' genestr] ...
                     ['n = ' num2str(n) ' patients'] ... 
                     ['d = ' num2str(nbp) ' base pairs']}} ;
    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                       genestr 'PCAScatPlot'] ;
    paramstruct = struct('npcadiradd',4, ...
                         'titlecellstr',titlecellstr, ...
                         'labelcellstr',{{'PC 1'; 'PC 2'; 'PC 3'; 'PC 4'}}, ...
                         'savestr',savestr, ...
                         'iscreenwrite',1) ;
    scatplotSM(mdatl,[],paramstruct) ;


  elseif ipart == 4 ;    %  PCA scatterplot, brushed

    figure(1) ;
    clf ;

    nbp = size(mdatl,1) ;
    titlecellstr = {{'Lung Cancer - Next Gen' ...
                     ['Gene = ' genestr] ...
                     ['n = ' num2str(n) ' patients'] ... 
                     ['d = ' num2str(nbp) ' base pairs']}} ;
    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                        genestr 'PCAScatPlotBrushed'] ;
    paramstruct = struct('npcadiradd',4, ...
                         'icolor',mcolor, ...
                         'isubpopkde',1, ...
                         'titlecellstr',titlecellstr, ...
                         'labelcellstr',{{'PC 1'; 'PC 2'; 'PC 3'; 'PC 4'}}, ...
                         'savestr',savestr, ...
                         'iscreenwrite',1) ;
    scatplotSM(mdatl,[],paramstruct) ;

  elseif ipart == 5 ;    %  Raw Data Curves, log10 scale, brushed

    figure(1) ;
    clf ;

    %  Make data overlay - log10 Data
    %
    nbp = size(mdatl,1) ;
    vibp = (1:nbp)' ;
    vaxh = axisSM(vibp) ;
    vaxv = axisSM(mdatl) ;
    vaxv(1) = 0 ;

    hold on ;
    for i = 1:n ;
      if sum(mcolor(i,:)) > 0.5 ;
        plot(mdatl(:,i),'-','Color',mcolor(i,:)) ;
      else ;
        plot(mdatl(:,i),'k-') ;
      end ;
    end ;
    hold off ;
    title(['Gene = ' genestr]) ;
    xlabel('exonic nt number, not genomic position') ;
    ylabel('log_{10}(RNA read depth + 1)') ;
    axis([vaxh(1) vaxh(2) vaxv(1) vaxv(2)]) ;

    orient landscape ;
    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                        genestr 'Log10DatOverlayBrushed'] ;
    print('-dpsc2',savestr) ;


  elseif ipart == 6 ;    %  FDA analysis, CurvdatSM, brushed colors

    figure(1) ;
    clf ;

    savestr = [outdirstr 'LungCancer2011ip' num2str(ipart) ...
                        genestr 'PCAScatPlotBrushed'] ;
    paramstruct = struct('icolor',mcolor, ...
                         'isubpopkde',1, ...
                         'legendcellstr',{{['Gene = ' genestr]}}, ...
                         'mlegendcolor',[0 1 0], ...
                         'savestr',savestr, ...
                         'iscreenwrite',1) ;
    curvdatSM(mdatl,paramstruct) ;


  end ;    %  of ipart if-block



end ;    %  of ig loop




